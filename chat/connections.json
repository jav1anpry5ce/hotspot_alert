Socket {
  _events:
   [Object: null prototype] {
     join: [Function],
     sendMessage: [Function],
     typing: [Function],
     getRooms: [Function],
     left: [Function],
     disconnect: [Function] },
  _eventsCount: 6,
  _maxListeners: undefined,
  nsp:
   Namespace {
     _events: [Object: null prototype] { connect: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     sockets:
      Map {
        'QxBdl4VV9gHCueH9AAAB' => [Socket],
        'k_45lJ_KY3vvkzUrAAAF' => [Socket],
        'GACBbsTDb4242bneAAAH' => [Socket],
        'KL8DmrTSgOMZaoDVAAAI' => [Socket],
        'BbXcarHc7CWb60LbAAAJ' => [Circular] },
     _fns: [],
     _ids: 0,
     server:
      Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Map],
        parentNsps: Map {},
        _path: '/socket.io',
        clientPathRegex:
         /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        sockets: [Circular],
        opts: [Object],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     name: '/',
     adapter:
      Adapter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        nsp: [Circular],
        rooms: [Map],
        sids: [Map],
        encoder: Encoder {} } },
  client:
   Client {
     sockets: Map { 'BbXcarHc7CWb60LbAAAJ' => [Circular] },
     nsps: Map { '/' => [Circular] },
     server:
      Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Map],
        parentNsps: Map {},
        _path: '/socket.io',
        clientPathRegex:
         /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        sockets: [Namespace],
        opts: [Object],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        id: 'gtUmnPZZr7gOupCKAAAG',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        protocol: 4,
        remoteAddress: '72.252.118.237',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 45000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 10723,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 315,
           [Symbol(triggerId)]: 255 },
        pingIntervalTimer:
         Timeout {
           _called: false,
           _idleTimeout: 25000,
           _idlePrev: [TimersList],
           _idleNext: [Timeout],
           _idleStart: 1880,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 130,
           [Symbol(triggerId)]: 0 },
        transport: [WebSocket] },
     encoder: Encoder {},
     decoder: Decoder { _callbacks: [Object] },
     id: 'gtUmnPZZr7gOupCKAAAG',
     onclose: [Function: bound onclose],
     ondata: [Function: bound ondata],
     onerror: [Function: bound onerror],
     ondecoded: [Function: bound ondecoded],
     connectTimeout: undefined },
  data: {},
  acks: Map {},
  fns: [],
  flags: {},
  server:
   Server {
     _events: [Object: null prototype] {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _nsps: Map { '/' => [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     clientPathRegex:
      /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
     _connectTimeout: 45000,
     _serveClient: true,
     _parser:
      { protocol: 5,
        PacketType: [Object],
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     sockets:
      Namespace {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        sockets: [Map],
        _fns: [],
        _ids: 0,
        server: [Circular],
        name: '/',
        adapter: [Adapter] },
     opts: { cors: [Object] },
     eio:
      Server {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        clients: [Object],
        clientsCount: 5,
        opts: [Object],
        corsMiddleware: [Function: corsMiddleware],
        ws: [WebSocketServer] },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:192.168.1.200:5000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 8 },
     engine:
      Server {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        clients: [Object],
        clientsCount: 5,
        opts: [Object],
        corsMiddleware: [Function: corsMiddleware],
        ws: [WebSocketServer] } },
  adapter:
   Adapter {
     _events: [Object: null prototype] {},
     _eventsCount: 0,
     _maxListeners: undefined,
     nsp:
      Namespace {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        sockets: [Map],
        _fns: [],
        _ids: 0,
        server: [Server],
        name: '/',
        adapter: [Circular] },
     rooms:
      Map {
        'QxBdl4VV9gHCueH9AAAB' => [Set],
        'k_45lJ_KY3vvkzUrAAAF' => [Set],
        'GACBbsTDb4242bneAAAH' => [Set],
        'KL8DmrTSgOMZaoDVAAAI' => [Set],
        'BbXcarHc7CWb60LbAAAJ' => [Set] },
     sids:
      Map {
        'QxBdl4VV9gHCueH9AAAB' => [Set],
        'k_45lJ_KY3vvkzUrAAAF' => [Set],
        'GACBbsTDb4242bneAAAH' => [Set],
        'KL8DmrTSgOMZaoDVAAAI' => [Set],
        'BbXcarHc7CWb60LbAAAJ' => [Set] },
     encoder: Encoder {} },
  id: 'BbXcarHc7CWb60LbAAAJ',
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: 'javaughnpryce.live:5000',
        connection: 'keep-alive',
        accept: '*/*',
        'user-agent':
         'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36 Edg/95.0.1020.30',
        origin: 'http://localhost:3000',
        referer: 'http://localhost:3000/',
        'accept-encoding': 'gzip, deflate',
        'accept-language': 'en-US,en;q=0.9' },
     time:
      'Tue Oct 26 2021 17:47:59 GMT+0000 (Coordinated Universal Time)',
     address: '72.252.118.237',
     xdomain: true,
     secure: false,
     issued: 1635270479687,
     url: '/socket.io/?EIO=4&transport=polling&t=NozjqUU',
     query:
      [Object: null prototype] { EIO: '4', transport: 'polling', t: 'NozjqUU' },
     auth: {} } }